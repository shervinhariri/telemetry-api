name: scenario-tests
on:
  push: { branches: [ main ] }
  workflow_dispatch: {}

jobs:
  e2e:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Start e2e stack
        env:
          TELEMETRY_DLQ_DIR: /tmp/dlq
        run: |
          docker compose down || true
          # Load test environment variables (skip comments)
          export $(grep -v '^#' .github/test.env | xargs)
          docker compose up -d --build
          # wait for API health
          for i in $(seq 1 40); do
            code=$(docker exec telemetry-api curl -s -o /dev/null -w "%{http_code}" http://127.0.0.1:80/v1/health || true)
            if [ "$code" = "200" ]; then echo "API healthy"; break; fi
            sleep 2
          done

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: 'requirements-ci.txt'

      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          if [ -f requirements-ci.txt ]; then pip install -r requirements-ci.txt; fi
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
          sudo apt-get update && sudo apt-get install -y jq

      - name: Run e2e tests
        env:
          PYTHONPATH: ${{ github.workspace }}
        run: |
          pytest -q

      - name: Scenario tester
        env:
          API_BASE_URL: http://localhost:80
          API_KEY: TEST_ADMIN_KEY
        run: |
          python tools/scenario_tester.py | tee scenario_report.json
          echo "---- Summary ----"
          jq '.results[] | {scenario, status, ok}' scenario_report.json

      - name: Dump logs on failure
        if: failure()
        run: |
          docker compose ps
          docker compose logs --no-color | tail -n 500

      - name: Upload report artifact
        uses: actions/upload-artifact@v4
        with:
          name: scenario-report
          path: scenario_report.json


