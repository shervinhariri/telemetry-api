
services:
  api:
    build: .
    container_name: telemetry-api
    environment:
      - PORT=8080
      - HOST=0.0.0.0
      - APP_VERSION=0.8.10
      - TELEMETRY_FEATURE_SOURCES=false
      - TELEMETRY_FEATURE_UDP=false
      - SQLITE_PATH=/data/telemetry.db
      - GEOIP_CITY_DB=/data/geo/GeoLite2-City.mmdb
      - GEOIP_ASN_DB=/data/geo/GeoLite2-ASN.mmdb
      - THREATLIST_CSV=/data/ti/indicators.txt
      - ENVIRONMENT=development
      - LOG_LEVEL=INFO
      - LOG_FORMAT=json
      - HTTP_LOG_ENABLED=true
      - HTTP_LOG_SAMPLE_RATE=0.1
      - HTTP_LOG_EXCLUDE_PATHS=/v1/metrics,/v1/system,/v1/logs/tail,/v1/admin/requests
      - REDACT_HEADERS=authorization,x-api-key
      - REDACT_FIELDS=password,token
      - ADMISSION_HTTP_ENABLED=true
      - HTTP_IP_ALLOWLIST_ENABLED=true
      - HTTP_TRUST_XFF=true
      - TRUST_PROXY=false
      - MAX_BATCH_BYTES=5242880
      - MAX_RECORDS=10000
      - RATE_LIMIT_PER_MIN=600
      - BOOTSTRAP_TENANT_ID=default
      - BOOTSTRAP_ADMIN_API_KEY=${BOOTSTRAP_ADMIN_API_KEY:-TEST_ADMIN_KEY}
      - API_KEY=${API_KEY:-TEST_ADMIN_KEY}
      - TELEMETRY_SEED_KEYS=${TELEMETRY_SEED_KEYS:-TEST_ADMIN_KEY,DEV_ADMIN_KEY_5a8f9ffdc3}
      - FEATURE_SOURCES=${FEATURE_SOURCES:-1}
      - FEATURE_UDP_HEAD=${FEATURE_UDP_HEAD:-0}
    ports:
      - "${PORT:-8080}:${PORT:-8080}"
    volumes:
      - dbdata:/data
      - ./geo:/data/geo:ro
      - ./ti:/data/ti:ro
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://127.0.0.1:${PORT:-8080}/v1/healthz || exit 1"]
      interval: 5s
      timeout: 2s
      retries: 30

  # keep disabled until UDP ingest exists in backend
  udp-ingestor:
    build: ./services/udp-head
    image: ghcr.io/netreex/telemetry-api-udp:0.8.10
    container_name: telemetry-udp-ingestor
    environment:
      - UDP_BIND=0.0.0.0
      - UDP_PORT=2055
      - ALLOWLIST_CIDRS=
      - RATE_PER_MIN=60000
      - API_URL=http://api:80/v1/ingest/netflow
      - API_KEY=${API_KEY}
      - SOURCE_ID=udp-head-01
    ports:
      - "2055:2055/udp"
    depends_on:
      - api
    restart: unless-stopped
    deploy:
      replicas: 0

  udp-head:
    build:
      context: ./heads
      dockerfile: Dockerfile.udp
    image: ghcr.io/netreex/telemetry-api-udp:0.0.1
    container_name: telemetry-udp-head
    profiles: ["udp"]          # <â€” only runs when profile enabled
    ports:
      - "2055:2055/udp"
      - "8081:8081"
    restart: unless-stopped
    depends_on:
      api:
        condition: service_healthy

volumes:
  dbdata:
